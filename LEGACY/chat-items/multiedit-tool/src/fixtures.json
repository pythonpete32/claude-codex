{
	"basic": [
		{
			"type": "tool_use",
			"toolUse": {
				"type": "tool_use",
				"id": "multiedit_001",
				"name": "MultiEdit",
				"input": {
					"file_path": "/Users/example/project/src/utils.ts",
					"edits": [
						{
							"old_string": "function oldName",
							"new_string": "function newName",
							"replace_all": false
						},
						{
							"old_string": "const DEBUG = true",
							"new_string": "const DEBUG = false",
							"replace_all": false
						}
					]
				}
			},
			"toolResult": {
				"output": {
					"message": "Applied 2 edits successfully to /Users/example/project/src/utils.ts",
					"edits_applied": 2,
					"total_edits": 2,
					"all_successful": true,
					"edit_details": [
						{
							"operation": {
								"old_string": "function oldName",
								"new_string": "function newName",
								"replace_all": false
							},
							"success": true,
							"replacements_made": 1
						},
						{
							"operation": {
								"old_string": "const DEBUG = true",
								"new_string": "const DEBUG = false",
								"replace_all": false
							},
							"success": true,
							"replacements_made": 1
						}
					]
				},
				"status": "completed"
			}
		},
		{
			"type": "tool_use",
			"toolUse": {
				"type": "tool_use",
				"id": "multiedit_002",
				"name": "MultiEdit",
				"input": {
					"file_path": "/Users/example/project/src/config.json",
					"edits": [
						{
							"old_string": "\"development\"",
							"new_string": "\"production\"",
							"replace_all": false
						}
					]
				}
			},
			"toolResult": {
				"output": {
					"message": "Applied 1 edit successfully to /Users/example/project/src/config.json",
					"edits_applied": 1,
					"total_edits": 1,
					"all_successful": true
				},
				"status": "completed"
			}
		}
	],
	"withReplaceAll": [
		{
			"type": "tool_use",
			"toolUse": {
				"type": "tool_use",
				"id": "multiedit_003",
				"name": "MultiEdit",
				"input": {
					"file_path": "/Users/example/project/src/logger.ts",
					"edits": [
						{
							"old_string": "console.log",
							"new_string": "logger.info",
							"replace_all": true
						},
						{
							"old_string": "console.error",
							"new_string": "logger.error",
							"replace_all": true
						}
					]
				}
			},
			"toolResult": {
				"output": {
					"message": "Applied 2 edits successfully to /Users/example/project/src/logger.ts",
					"edits_applied": 2,
					"total_edits": 2,
					"all_successful": true,
					"edit_details": [
						{
							"operation": {
								"old_string": "console.log",
								"new_string": "logger.info",
								"replace_all": true
							},
							"success": true,
							"replacements_made": 5
						},
						{
							"operation": {
								"old_string": "console.error",
								"new_string": "logger.error",
								"replace_all": true
							},
							"success": true,
							"replacements_made": 2
						}
					]
				},
				"status": "completed"
			}
		}
	],
	"partialFailures": [
		{
			"type": "tool_use",
			"toolUse": {
				"type": "tool_use",
				"id": "multiedit_004",
				"name": "MultiEdit",
				"input": {
					"file_path": "/Users/example/project/src/component.tsx",
					"edits": [
						{
							"old_string": "className=\"old-class\"",
							"new_string": "className=\"new-class\"",
							"replace_all": false
						},
						{
							"old_string": "nonExistentString",
							"new_string": "replacementString",
							"replace_all": false
						},
						{
							"old_string": "import React from 'react'",
							"new_string": "import React, { useState } from 'react'",
							"replace_all": false
						}
					]
				}
			},
			"toolResult": {
				"output": {
					"message": "Applied 2 out of 3 edits to /Users/example/project/src/component.tsx",
					"edits_applied": 2,
					"total_edits": 3,
					"all_successful": false,
					"edit_details": [
						{
							"operation": {
								"old_string": "className=\"old-class\"",
								"new_string": "className=\"new-class\"",
								"replace_all": false
							},
							"success": true,
							"replacements_made": 1
						},
						{
							"operation": {
								"old_string": "nonExistentString",
								"new_string": "replacementString",
								"replace_all": false
							},
							"success": false,
							"error": "String not found in file",
							"replacements_made": 0
						},
						{
							"operation": {
								"old_string": "import React from 'react'",
								"new_string": "import React, { useState } from 'react'",
								"replace_all": false
							},
							"success": true,
							"replacements_made": 1
						}
					]
				},
				"status": "completed"
			}
		}
	],
	"errors": [
		{
			"type": "tool_use",
			"toolUse": {
				"type": "tool_use",
				"id": "multiedit_005",
				"name": "MultiEdit",
				"input": {
					"file_path": "/nonexistent/file.ts",
					"edits": [
						{
							"old_string": "test",
							"new_string": "replacement",
							"replace_all": false
						}
					]
				}
			},
			"toolResult": {
				"output": "Error: ENOENT: no such file or directory, open '/nonexistent/file.ts'",
				"status": "failed"
			}
		},
		{
			"type": "tool_use",
			"toolUse": {
				"type": "tool_use",
				"id": "multiedit_006",
				"name": "MultiEdit",
				"input": {
					"file_path": "/root/protected-file.txt",
					"edits": [
						{
							"old_string": "secret",
							"new_string": "public",
							"replace_all": false
						}
					]
				}
			},
			"toolResult": {
				"output": "Error: EACCES: permission denied, open '/root/protected-file.txt'",
				"status": "failed"
			}
		}
	],
	"edgeCases": [
		{
			"type": "tool_use",
			"toolUse": {
				"type": "tool_use",
				"id": "multiedit_007",
				"name": "MultiEdit",
				"input": {
					"file_path": "/Users/example/project/empty.txt",
					"edits": [
						{
							"old_string": "anything",
							"new_string": "something",
							"replace_all": false
						}
					]
				}
			},
			"toolResult": {
				"output": {
					"message": "Applied 0 out of 1 edits to /Users/example/project/empty.txt",
					"edits_applied": 0,
					"total_edits": 1,
					"all_successful": false,
					"edit_details": [
						{
							"operation": {
								"old_string": "anything",
								"new_string": "something",
								"replace_all": false
							},
							"success": false,
							"error": "String not found in file",
							"replacements_made": 0
						}
					]
				},
				"status": "completed"
			}
		},
		{
			"type": "tool_use",
			"toolUse": {
				"type": "tool_use",
				"id": "multiedit_008",
				"name": "MultiEdit",
				"input": {
					"file_path": "/Users/example/files/very-long-filename-that-might-cause-display-issues-in-the-ui-component-when-rendered.js",
					"edits": [
						{
							"old_string": "var oldVariable = 'this is a very long string that might cause display issues in the user interface when shown in a compact format'",
							"new_string": "const newVariable = 'updated value'",
							"replace_all": false
						}
					]
				}
			},
			"toolResult": {
				"output": {
					"message": "Applied 1 edit successfully to /Users/example/files/very-long-filename-that-might-cause-display-issues-in-the-ui-component-when-rendered.js",
					"edits_applied": 1,
					"total_edits": 1,
					"all_successful": true
				},
				"status": "completed"
			}
		},
		{
			"type": "tool_use",
			"toolUse": {
				"type": "tool_use",
				"id": "multiedit_009",
				"name": "MultiEdit",
				"input": {
					"file_path": "/Users/example/project/src/test.ts",
					"edits": [
						{
							"old_string": "placeholder_text",
							"new_string": "// Header comment\n",
							"replace_all": false
						}
					]
				}
			},
			"toolResult": {
				"output": "Error: old_string cannot be empty",
				"status": "failed"
			}
		}
	]
}
